import { PrismaClient } from '@prisma/client';
import * as argon2 from '@node-rs/argon2';

const prisma = new PrismaClient();

const ARGON2_CONFIG = {
  timeCost: 4,
  memoryCost: 65536,
  parallelism: 2,
  hashLength: 32
};

async function seed() {
  try {
    // KullanÄ±cÄ±lar
    const adminPassword = await argon2.hash('admin123', ARGON2_CONFIG);
    const moderatorPassword = await argon2.hash('moderator123', ARGON2_CONFIG);
    const userPassword = await argon2.hash('user123', ARGON2_CONFIG);

    const admin = await prisma.user.create({
      data: {
        name: 'Admin User',
        username: 'admin',
        hashed_password: adminPassword,
        role: 'admin',
      },
    });

    const moderator = await prisma.user.create({
      data: {
        name: 'Moderator User',
        username: 'moderator',
        hashed_password: moderatorPassword,
        role: 'moderator',
      },
    });

    const user = await prisma.user.create({
      data: {
        name: 'Normal User',
        username: 'user',
        hashed_password: userPassword,
        role: 'member',
      },
    });

    // Kategoriler
    const technology = await prisma.category.create({
      data: {
        name: 'Teknoloji',
      },
    });

    const science = await prisma.category.create({
      data: {
        name: 'Bilim',
      },
    });

    const art = await prisma.category.create({
      data: {
        name: 'Sanat',
      },
    });

    // GÃ¶nderiler
    const post1 = await prisma.post.create({
      data: {
        title: 'Yapay Zeka ve GeleceÄŸimiz',
        content: `Yapay zeka teknolojisi her geÃ§en gÃ¼n hayatÄ±mÄ±zÄ±n daha fazla alanÄ±na giriyor. 
        Ã–zellikle makine Ã¶ÄŸrenimi ve derin Ã¶ÄŸrenme alanÄ±ndaki geliÅŸmeler, birÃ§ok sektÃ¶rde devrim yaratÄ±yor.
        
        Bu yazÄ±da, yapay zekanÄ±n geleceÄŸimizi nasÄ±l ÅŸekillendireceÄŸini ve bunun iÃ§in nasÄ±l hazÄ±rlanmamÄ±z gerektiÄŸini ele alacaÄŸÄ±z.`,
        user_id: admin.id,
        category_id: technology.id,
        published_at: new Date(),
        image_url: 'https://source.unsplash.com/800x400/?artificial-intelligence',
      },
    });

    const post2 = await prisma.post.create({
      data: {
        title: "Mars'ta YaÅŸam Ä°zleri",
        content: `NASA'nÄ±n Perseverance aracÄ±, Mars'ta organik molekÃ¼ller buldu! 
        Bu keÅŸif, KÄ±zÄ±l Gezegen'de bir zamanlar yaÅŸam olabileceÄŸine dair en gÃ¼Ã§lÃ¼ kanÄ±tlardan biri.
        
        Peki bu buluÅŸ ne anlama geliyor ve gelecekteki Mars araÅŸtÄ±rmalarÄ± iÃ§in ne gibi sonuÃ§lar doÄŸuracak?`,
        user_id: moderator.id,
        category_id: science.id,
        published_at: new Date(),
        image_url: 'https://source.unsplash.com/800x400/?mars',
      },
    });

    const post3 = await prisma.post.create({
      data: {
        title: 'Modern SanatÄ±n YÃ¼kseliÅŸi',
        content: `Dijital Ã§aÄŸda sanat yeni bir boyut kazanÄ±yor. NFT'ler, dijital enstalasyonlar ve sanal gerÃ§eklik,
        sanat dÃ¼nyasÄ±nÄ± baÅŸtan aÅŸaÄŸÄ± deÄŸiÅŸtiriyor.
        
        Bu yazÄ±da modern sanatÄ±n geldiÄŸi noktayÄ± ve geleceÄŸini tartÄ±ÅŸacaÄŸÄ±z.`,
        user_id: user.id,
        category_id: art.id,
        published_at: new Date(),
        image_url: 'https://source.unsplash.com/800x400/?modern-art',
      },
    });

    // Yorumlar
    await prisma.comment.create({
      data: {
        content: 'Harika bir yazÄ± olmuÅŸ! Yapay zeka konusunda daha fazla iÃ§erik bekliyoruz.',
        user_id: user.id,
        post_id: post1.id,
        commenter_name: user.name,
      },
    });

    await prisma.comment.create({
      data: {
        content: 'Mars keÅŸifleri gerÃ§ekten heyecan verici. Bu konuda daha detaylÄ± bilgi paylaÅŸabilir misiniz?',
        user_id: moderator.id,
        post_id: post2.id,
        commenter_name: moderator.name,
      },
    });

    await prisma.comment.create({
      data: {
        content: "NFT'ler konusunda Ã§ok gÃ¼zel bir bakÄ±ÅŸ aÃ§Ä±sÄ± sunmuÅŸsunuz.",
        user_id: admin.id,
        post_id: post3.id,
        commenter_name: admin.name,
      },
    });

    console.log('Seed data baÅŸarÄ±yla oluÅŸturuldu! ğŸŒ±');
  } catch (error) {
    console.error('Seed data oluÅŸturulurken hata:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seed(); 