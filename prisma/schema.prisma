// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  name            String
  username        String        @unique
  hashed_password String
  role            String        @default("member") // admin, moderator, member
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt
  posts           Post[]
  comments        Comment[]
  refresh_tokens  RefreshToken[]
}

model Category {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime?
  posts      Post[]
}

model Post {
  id           Int       @id @default(autoincrement())
  title        String
  content      String
  image_url    String?
  published_at DateTime?
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  deleted_at   DateTime?
  category     Category  @relation(fields: [category_id], references: [id])
  category_id  Int
  user         User      @relation(fields: [user_id], references: [id])
  user_id      Int
  comments     Comment[]
  post_tags    PostTag[]
}

model Comment {
  id             Int      @id @default(autoincrement())
  content        String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  post           Post     @relation(fields: [post_id], references: [id])
  post_id        Int
  user           User     @relation(fields: [user_id], references: [id])
  user_id        Int
  commenter_name String
}

model Tag {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  post_tags  PostTag[]
}

model PostTag {
  post    Post @relation(fields: [post_id], references: [id])
  post_id Int
  tag     Tag  @relation(fields: [tag_id], references: [id])
  tag_id  Int

  @@id([post_id, tag_id])
}

model RefreshToken {
  id         Int       @id @default(autoincrement())
  token      String    @unique
  user       User      @relation(fields: [user_id], references: [id])
  user_id    Int
  expires_at DateTime
  revoked_at DateTime?
  created_at DateTime  @default(now())
} 